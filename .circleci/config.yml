version: 2
machine:
  services:
    - docker
    - mysql

jobs:
  test:
    docker:
      - image: circleci/ruby:2.5.0-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-{{ arch }}-{{ checksum "Gemfile.lock" }}
      - run: |
          bundle install
      - save_cache:
          key: gem-{{ arch }}-{{ checksum "Gemfile.lock" }}-{{ .Revision }}
          paths:
            - /usr/local/lib/ruby/gems/
      - run: |
          bundle exec rspec

  build:
    docker:
      - image: docker:latest
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          keys:
            - docker-{{ arch }}-{{ .Branch }}
      - run: |
          if -r image.tar;
          then
            docker load -i image.tar
          else
            echo "missing image.tar, continuing with build"
          fi
          docker build -t oleville/voting:${CIRCLE_SHA1} .
          docker save oleville/voting:${CIRCLE_SHA1} -o image.tar
      - save_cache:
          key: docker-{{ arch }}-{{ .Branch }}-{{ checksum image.tar }}
          paths:
            - image.tar

  deploy_HEAD:
    docker:
      - image: "docker:latest"
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - docker-{{ arch }}-{{ .Branch }}
      - run: |
          docker load -i image.tar
      - run: |
          docker tag oleville/voting:${CIRCLE_SHA1} oleville/voting:HEAD
      - run: |
          docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
          docker push docker.io/oleville/voting:HEAD

  deploy_branch:
    docker:
      - image: "docker:latest"
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - docker-{{ arch }}-{{ .Branch }}
      - run: |
          docker load -i image.tar
      - run: |
          docker tag oleville/voting:${CIRCLE_SHA1} oleville/voting:${CIRCLE_BRANCH}
      - run: |
          docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
          docker push docker.io/oleville/voting:${CIRCLE_BRANCH}

  deploy_tag:
    docker:
      - image: "docker:latest"
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - docker-{{ arch }}-{{ .Branch }}
      - run: |
          docker load -i image.tar
      - run: |
          docker tag oleville/voting:${CIRCLE_SHA1} oleville/voting:${CIRCLE_TAG}
      - run: |
          docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
          docker push docker.io/oleville/voting:${CIRCLE_TAG}
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - build:
          requires: [test]
      - deploy_HEAD:
          requires: [build]
          filters:
            branches:
              only:
                - master
      - deploy_branch:
          requires: [build]
          filters:
            branches:
              ignore: [master]
      - deploy_tag:
          requires: [build]
          filters:
            tags:
              only:
                - /^v.*/
            branches:
              only:
                - master
